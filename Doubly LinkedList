 --Doubly linked list--
 
-> The linked list is a linear data structure which can be described as the collection of node.
-> Doubly linked list consists of three fields:
    ->  Data represents the data value stored in the node.
    ->  Previous represents a pointer that points to the previous node.
    ->  Next represents a pointer that points to next node in the list.
 
 -> Example:
 
 public class DoublyLinkedList{
     private Node first=null;
     private int count=0;
   public void add(object e){
     if(first==null){
        first=new Node(e,null,null);
         count++;
         return;
     }
      Node curr=first;
      while(curr.next!=null){
         curr=curr.next;
     }
       curr.next=new Node(e,null,curr);
       count++;
      }
 public object get(int index){
     if(index<=-1||index>=size()){
        throw new IndexOutOfBoundException();
      }
       Node curr=first;
        for(int i=1; i<=index;i++){
           curr=curr.next;
          }
           return curr.ele;
         }
  public int size(){
       return count;
   } 
  public void add(int index, object e){
      if(index<=-1||index>=size()){
          throw new INdexOutOfBoundException();
        }
        if(index==0){
            first=new Node(e,first,null);
               count++;
               return;
               }
            Node curr=first;
            for(int i=1;i<index;i++){
               curr=curr.next;
             }
             Node n=new Node(e,curr.next,curr);
               curr.next.prev=n;
               curr.next=n;
               count++;
      }  
               
               
               
               
               
               
               
               
               
               
